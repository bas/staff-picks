name: Provision Environment

permissions:
  id-token: write 
  contents: read

on:
  workflow_dispatch:

env:
  AWS_REGION: eu-west-1
  REPO_NAME: ${{ github.event.repository.name }}
  
jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v1

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_TFSTATE_ROLE }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Terraform validate
      run: terraform validate

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_VAR_LAUNCHDARKLY_ACCESS_TOKEN: ${{ secrets.LD_ACCESS_TOKEN }}
        TF_VAR_bucket: ${{ env.REPO_NAME }}
        TF_VAR_project: ${{ env.REPO_NAME }}
        TF_VAR_region: ${{ env.AWS_REGION }}

  ci:
    needs: [terraform]
    uses: ./.github/workflows/ci-job.yml
  
  cd:
    needs: [ci]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - uses: actions/download-artifact@v3
      with:
        name: staff-picks
        path: out
        
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ secrets.AWS_TFSTATE_ROLE }}
        aws-region: ${{ env.AWS_REGION }}
          
    - name: Sync s3 bucket
      run: aws s3 sync ./out s3://${{ env.REPO_NAME }}
    
    - name: Add web app url
      run: echo "http://$REPO_NAME.s3-website-$AWS_REGION.amazonaws.com" >> $GITHUB_STEP_SUMMARY
