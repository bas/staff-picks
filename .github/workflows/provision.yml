name: Provision LaunchDarkly

on:
  workflow_dispatch:

permissions:
  id-token: write 
  contents: read

env:
  REPO_NAME: ${{ github.event.repository.name }}
  OWNER: ${{ github.repository_owner }}
  REGION: eu-west-1
 
jobs:
  terraform:
    name: Terraform plan & apply
    runs-on: ubuntu-latest
    
    outputs:
      client_side_id: ${{ steps.tf_output.outputs.client_side_id }}
      
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Terraform setup
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v3.0.0
      with:
        role-to-assume: ${{ secrets.AWS_TFSTATE_ROLE }}
        aws-region: ${{ env.REGION }}

    - name: Terraform init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Terraform validate
      run: terraform validate

    - name: Terraform apply
      run: terraform apply -auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_VAR_LAUNCHDARKLY_ACCESS_TOKEN: ${{ secrets.LD_ACCESS_TOKEN }}
        TF_VAR_project: ${{ env.OWNER }}-${{ env.REPO_NAME }} 

    - name: Terraform output
      id: tf_output
      run: |
        CLIENT_SIDE_ID=$(terraform output -raw launchdarkly_client_side_id)
        echo "client_side_id=$CLIENT_SIDE_ID" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
